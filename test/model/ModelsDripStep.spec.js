/*
 * SendX APP Server V2
 * Send App Server
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.25
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendXAppServerV2);
  }
}(this, function(expect, SendXAppServerV2) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ModelsDripStep', function() {
      beforeEach(function() {
        instance = new SendXAppServerV2.ModelsDripStep();
      });

      it('should create an instance of ModelsDripStep', function() {
        // TODO: update the code to test ModelsDripStep
        expect(instance).to.be.a(SendXAppServerV2.ModelsDripStep);
      });

      it('should have the property autogeneratePlainText (base name: "autogeneratePlainText")', function() {
        // TODO: update the code to test the property autogeneratePlainText
        expect(instance).to.have.property('autogeneratePlainText');
        // expect(instance.autogeneratePlainText).to.be(expectedValueLiteral);
      });

      it('should have the property duration (base name: "duration")', function() {
        // TODO: update the code to test the property duration
        expect(instance).to.have.property('duration');
        // expect(instance.duration).to.be(expectedValueLiteral);
      });

      it('should have the property durationUnit (base name: "durationUnit")', function() {
        // TODO: update the code to test the property durationUnit
        expect(instance).to.have.property('durationUnit');
        // expect(instance.durationUnit).to.be(expectedValueLiteral);
      });

      it('should have the property encryptedId (base name: "encryptedId")', function() {
        // TODO: update the code to test the property encryptedId
        expect(instance).to.have.property('encryptedId');
        // expect(instance.encryptedId).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property metadata (base name: "metadata")', function() {
        // TODO: update the code to test the property metadata
        expect(instance).to.have.property('metadata');
        // expect(instance.metadata).to.be(expectedValueLiteral);
      });

      it('should have the property order (base name: "order")', function() {
        // TODO: update the code to test the property order
        expect(instance).to.have.property('order');
        // expect(instance.order).to.be(expectedValueLiteral);
      });

      it('should have the property segmentOptions (base name: "segmentOptions")', function() {
        // TODO: update the code to test the property segmentOptions
        expect(instance).to.have.property('segmentOptions');
        // expect(instance.segmentOptions).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

    });
  });

}));
