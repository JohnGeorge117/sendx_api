/*
 * SendX APP Server V2
 * Send App Server
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.25
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ModelsBulk', 'model/ModelsBulkRequest', 'model/ModelsDeepTeamAutomation', 'model/ModelsDeepTeamBulk'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ModelsBulk'), require('../model/ModelsBulkRequest'), require('../model/ModelsDeepTeamAutomation'), require('../model/ModelsDeepTeamBulk'));
  } else {
    // Browser globals (root is window)
    if (!root.SendXAppServerV2) {
      root.SendXAppServerV2 = {};
    }
    root.SendXAppServerV2.TeamsbulkApi = factory(root.SendXAppServerV2.ApiClient, root.SendXAppServerV2.ModelsBulk, root.SendXAppServerV2.ModelsBulkRequest, root.SendXAppServerV2.ModelsDeepTeamAutomation, root.SendXAppServerV2.ModelsDeepTeamBulk);
  }
}(this, function(ApiClient, ModelsBulk, ModelsBulkRequest, ModelsDeepTeamAutomation, ModelsDeepTeamBulk) {
  'use strict';

  /**
   * Teamsbulk service.
   * @module api/TeamsbulkApi
   * @version 1.0.0
   */

  /**
   * Constructs a new TeamsbulkApi. 
   * @alias module:api/TeamsbulkApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the teamBulkActionRouterCreateBulkAction operation.
     * @callback module:api/TeamsbulkApi~teamBulkActionRouterCreateBulkActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsBulk} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Bulk action
     * @param {String} xTeamApiKey Account API Key
     * @param {module:model/ModelsBulkRequest} body The bulk automation content
     * @param {module:api/TeamsbulkApi~teamBulkActionRouterCreateBulkActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsBulk}
     */
    this.teamBulkActionRouterCreateBulkAction = function(xTeamApiKey, body, callback) {
      var postBody = body;

      // verify the required parameter 'xTeamApiKey' is set
      if (xTeamApiKey === undefined || xTeamApiKey === null) {
        throw new Error("Missing the required parameter 'xTeamApiKey' when calling teamBulkActionRouterCreateBulkAction");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling teamBulkActionRouterCreateBulkAction");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-Team-ApiKey': xTeamApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ModelsBulk;

      return this.apiClient.callApi(
        '/teams/bulk/', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the teamBulkActionRouterGetAllBulkAction operation.
     * @callback module:api/TeamsbulkApi~teamBulkActionRouterGetAllBulkActionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsDeepTeamBulk>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All GetAllBulkAction
     * @param {String} xTeamApiKey Team API Key
     * @param {Object} opts Optional parameters
     * @param {Number} opts.offset offset
     * @param {Number} opts.limit limit
     * @param {String} opts.search search
     * @param {module:api/TeamsbulkApi~teamBulkActionRouterGetAllBulkActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsDeepTeamBulk>}
     */
    this.teamBulkActionRouterGetAllBulkAction = function(xTeamApiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'xTeamApiKey' is set
      if (xTeamApiKey === undefined || xTeamApiKey === null) {
        throw new Error("Missing the required parameter 'xTeamApiKey' when calling teamBulkActionRouterGetAllBulkAction");
      }


      var pathParams = {
      };
      var queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'search': opts['search'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-Team-ApiKey': xTeamApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [ModelsDeepTeamBulk];

      return this.apiClient.callApi(
        '/teams/bulk/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the teamBulkActionRouterGetBulkAction operation.
     * @callback module:api/TeamsbulkApi~teamBulkActionRouterGetBulkActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsDeepTeamAutomation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetBulkAction Automation
     * @param {String} xTeamApiKey Team API Key
     * @param {Number} bulkActionId The bulkActionId you want to get
     * @param {module:api/TeamsbulkApi~teamBulkActionRouterGetBulkActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsDeepTeamAutomation}
     */
    this.teamBulkActionRouterGetBulkAction = function(xTeamApiKey, bulkActionId, callback) {
      var postBody = null;

      // verify the required parameter 'xTeamApiKey' is set
      if (xTeamApiKey === undefined || xTeamApiKey === null) {
        throw new Error("Missing the required parameter 'xTeamApiKey' when calling teamBulkActionRouterGetBulkAction");
      }

      // verify the required parameter 'bulkActionId' is set
      if (bulkActionId === undefined || bulkActionId === null) {
        throw new Error("Missing the required parameter 'bulkActionId' when calling teamBulkActionRouterGetBulkAction");
      }


      var pathParams = {
        'bulkActionId': bulkActionId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-Team-ApiKey': xTeamApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ModelsDeepTeamAutomation;

      return this.apiClient.callApi(
        '/teams/bulk/{bulkActionId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
